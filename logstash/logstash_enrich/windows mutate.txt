 mutate {
      rename => [ "AccountName", "user" ]
      rename => [ "AccountType", "account_type" ]
      rename => [ "ActivityID", "activity_id" ]
      rename => [ "Category", "category" ]
      rename => [ "ClientAddress", "client_ip" ]
      rename => [ "Channel", "channel" ]
      rename => [ "CommandLine", "command_line" ]
      rename => [ "DCIPAddress", "domain_controller_ip" ]
      rename => [ "DCName", "domain_controller_name" ]
      rename => [ "DestAddress", "destination_ip" ]
      rename => [ "DestPort", "destination_port" ]
      rename => [ "EventID", "event_id" ]
      rename => [ "EventReceivedTime", "event_received_time" ]
      rename => [ "EventType", "event_type" ]
      rename => [ "GatewayIPAddress", "gateway_ip" ]
      rename => [ "IPAddress", "source_ip" ]
      rename => [ "Ipaddress", "source__ip" ]
      rename => [ "IpAddress", "source_ip" ]
      rename => [ "IPPort", "source_port" ]
      rename => [ "OpcodeValue", "opcode_value" ]
      rename => [ "PreAuthType", "preauthentication_type" ]
      rename => [ "PrincipleSAMName", "user" ]
      rename => [ "ProcessID", "process_id" ]
      rename => [ "ProviderGUID", "providerguid" ]
      rename => [ "RecordNumber", "record_number" ]
      rename => [ "RemoteAddress", "destination_ip" ]
      rename => [ "ServiceName", "service_name" ]
      rename => [ "ServiceID", "service_id" ]
      rename => [ "SeverityValue", "severity_value" ]
      rename => [ "SourceAddress", "source_ip" ]
      rename => [ "SourcePort", "source_port" ]
      rename => [ "SourceModuleName", "source_module_name" ]
      rename => [ "SourceModuleType", "source_module_type" ]
      rename => [ "SourceName", "source_name" ]
      rename => [ "SubjectUserName", "user" ]
      rename => [ "TaskName", "task_name" ]
      rename => [ "TargetDomainName", "target_domain_name" ]
      rename => [ "TargetUserName", "user" ]
      rename => [ "ThreadID", "thread_id" ]
      rename => [ "User_ID", "user" ]
      rename => [ "UserID", "user" ]
      rename => [ "username", "user" ]
    }
    mutate {
      convert => [ "command_line_length", "integer" ]
      convert => [ "destination_port", "integer" ]
      convert => [ "source_port", "integer" ]
    }

filter{ 
    elasticsearch {
      hosts => "10.1.10.16"
      index => "dp_audit-2017.02.16"
      query_template => "/home/vittorio/Documents/elastic-queries/matching-requestaw.json"
      fields => { "request" => "new_key" }  
  }
}

input {
  file {
    path => "/usr/share/logstash/cti/mitre_attack.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => [ "attack" ]
  }
}

filter {
  if "attack" in [tags]{
    csv
    {
        skip_header => true
        columns => [
        'matrix','technique','technique_id','technique_description','mitigation','mitigation_description',
        'group','group_id','group_aliases','group_description','software','software_id','software_description',
        'software_labels','relationship_description','detectable_by_common_defenses','detectable_explanation',
        'difficulty_for_adversary','difficulty_explanation','effective_permissions','network_requirements',
        'remote_support','system_requirements','contributors','url','tactic','platform','data_sources',
        'permissions_required','Validation'
        ]
        add_field => { "[@metadata][helk_parsed]" => "yes" }
    }
  }
}

output {
  if "attack" in [tags] and [@metadata][helk_parsed] == "yes" {
    elasticsearch {
      hosts => ["helk-elasticsearch:9200"]
      index => "mitre-attack-%{+YYYY.MM.dd}"
      user => 'elastic'
      #password => 'elasticpassword'
    }
  }