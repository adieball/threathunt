version: '2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es01
    restart: unless-stopped
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es02
    restart: unless-stopped
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es03
    restart: unless-stopped
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic
  logstash:
    image: docker.elastic.co/logstash/logstash:7.4.2
    container_name: logstash    
    ports:
     - 5044:5044
    restart: unless-stopped
    volumes:
    - /opt/threathunt/logstash/pipeline/:/usr/share/logstash/pipeline/
    - /opt/threathunt/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    networks:
      - elastic
  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.4.2'
    container_name: kibana
    restart: unless-stopped
    volumes:
      - /opt/threathunt/kibana/config/:/usr/share/kibana/config/
    ports:
      - '5601:5601'
    networks:
      - elastic
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    volumes:
    - /opt/threathunt/portainer/data:/data
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    networks:
      - elastic      
  domainstats:
    image: securityonionsolutions/so-domainstats:latest
    container_name: domainstats
    restart: unless-stopped
    ports:
      - 20000:20000
    volumes:
      - /opt/threathunt/domain_stats/top-1m.csv:/opt/domain_stats/top-1m.csv
    networks:
      - elastic
  freqserver:
    image: securityonionsolutions/so-freqserver
    container_name: freqserver
    restart: unless-stopped
    ports:
      - 10004:10004
    networks:
      - elastic
  cerebro:
    image: lmenezes/cerebro:latest
    container_name: cerebro
    restart: unless-stopped
    ports:
      - 9001:9000
    networks:
      - elastic
  elastalert:
    image: ivankrizsan/elastalert:latest
    container_name: elastalert
    restart: unless-stopped
    environment:
          - ELASTICSEARCH_HOST=es01
          - CONTAINER_TIMEZONE=Europe/Brussels
          - SET_CONTAINER_TIMEZONE=True
    volumes:
          - /opt/threathunt/elastalert/rules:/opt/rules
          - /opt/threathunt/elastalert/config/elastalert_config.yaml:/opt/config/elastalert_config.yaml
          - /opt/threathunt/elastalert/logs:/opt/logs
         #- /opt_elastalert/rule_templates:/opt/elastalert/rule_templates
    networks:
      - elastic
volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge

